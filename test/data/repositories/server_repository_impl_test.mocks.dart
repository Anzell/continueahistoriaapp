// Mocks generated by Mockito 5.1.0 from annotations
// in continueahistoriaapp/test/data/repositories/server_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:continueahistoriaapp/core/external/socket_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [SocketService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSocketService extends _i1.Mock implements _i2.SocketService {
  MockSocketService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void emitEvent({dynamic data}) =>
      super.noSuchMethod(Invocation.method(#emitEvent, [], {#data: data}),
          returnValueForMissingStub: null);
  @override
  _i3.Stream<dynamic> eventListener({String? event}) => (super.noSuchMethod(
      Invocation.method(#eventListener, [], {#event: event}),
      returnValue: Stream<dynamic>.empty()) as _i3.Stream<dynamic>);
  @override
  _i3.Future<void> init() => (super.noSuchMethod(Invocation.method(#init, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
